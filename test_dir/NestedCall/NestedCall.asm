
// Translating file: Sys
(Sys.init)
@4000
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@3
M=D
@5000
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@4
M=D
// Save return address
// call Sys.main 0
@Sys.main$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
//Save the caller's Segments
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//Save the caller's Segments
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//Save the caller's Segments
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//Save the caller's Segments
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
// Repositioning Arg for the callee
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
//LCL = SP
@SP
D=M
@LCL
M=D
@Sys.main
0;JMP
(Sys.main$ret.0)
@SP
AM=M-1
D=M
@6
M=D
(LOOP)
@LOOP
0;JMP
(Sys.main)
@SP
A=M
M=0
@SP
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@SP
A=M
M=0
@SP
M=M+1
@4001
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@3
M=D
@5001
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@4
M=D
@200
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@40
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@123
D=A
@SP
A=M
M=D
@SP
M=M+1
// Save return address
// call Sys.add12 1
@Sys.add12$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
//Save the caller's Segments
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
//Save the caller's Segments
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
//Save the caller's Segments
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
//Save the caller's Segments
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
// Repositioning Arg for the callee
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
//LCL = SP
@SP
D=M
@LCL
M=D
@Sys.add12
0;JMP
(Sys.add12$ret.1)
@SP
AM=M-1
D=M
@5
M=D
@LCL
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP
AM=M-1
D=M
A=A-1
M=D+M
@SP
AM=M-1
D=M
A=A-1
M=D+M
//Store our frame (LCL) in R13 temporally
@LCL
D=M
@R13
M=D
// Store return address in R14
@5
D=A
@R13
D=M-D
A=D
D=M
@R14
M=D
// Get return value and store in arg0
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
// Restore SP
@ARG
D=M+1
@SP
M=D
// Restore THAT
@R13
M=M-1
A=M
D=M
@THAT
M=D
// Restore THIS
@R13
M=M-1
A=M
D=M
@THIS
M=D
// Restore ARG
@R13
M=M-1
A=M
D=M
@ARG
M=D
// Restore LCL
@R13
M=M-1
A=M
D=M
@LCL
M=D
// Jump to return address
@R14
A=M
0;JMP
(Sys.add12)
@4002
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@3
M=D
@5002
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@4
M=D
@ARG
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
M=D+M
//Store our frame (LCL) in R13 temporally
@LCL
D=M
@R13
M=D
// Store return address in R14
@5
D=A
@R13
D=M-D
A=D
D=M
@R14
M=D
// Get return value and store in arg0
@SP
M=M-1
A=M
D=M
@ARG
A=M
M=D
// Restore SP
@ARG
D=M+1
@SP
M=D
// Restore THAT
@R13
M=M-1
A=M
D=M
@THAT
M=D
// Restore THIS
@R13
M=M-1
A=M
D=M
@THIS
M=D
// Restore ARG
@R13
M=M-1
A=M
D=M
@ARG
M=D
// Restore LCL
@R13
M=M-1
A=M
D=M
@LCL
M=D
// Jump to return address
@R14
A=M
0;JMP
